// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
enum Role {
  ADMIN
  JOBSEEKER
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime @db.Date
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String?
  email    String?   @unique
  image    String?
  accounts Account[]
  sessions Session[]
  role     Role      @default(JOBSEEKER)
  phone    Int?

  appliedFor JobApplication[]
}

model JobApplication {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  appliedByIds String @db.ObjectId
  jobListingId String @db.ObjectId

  createdAt DateTime @default(now()) @db.Date

  appliedBy  User       @relation(fields: [appliedById], references: [id])
  joblisting JobListing @relation(fields: [jobListingId], references: [id])
}

model JobListing {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  proffesionId String @db.ObjectId
  areaId       String @db.ObjectId

  area            Area             @relation(fields: [areaId], references: [id])
  proffesion      Proffesion       @relation(fields: [proffesionId], references: [id])
  JobApplications JobApplication[]
}

model Proffesion {
  name        String
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  JobListings JobListing[]
}

model VerificationToken {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  token   String   @unique
  expires DateTime

  @@unique([id, token])
}

model Area {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  name       String       @unique
  createdAt  DateTime     @default(now()) @db.Date
  active     Boolean      @default(true)
  JobListing JobListing[]

  @@index([name, createdAt(sort: Asc)])
}

model Profession {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  createdAt DateTime @default(now()) @db.Date
  active    Boolean  @default(true)

  @@index([name, createdAt(sort: Asc)])
}
